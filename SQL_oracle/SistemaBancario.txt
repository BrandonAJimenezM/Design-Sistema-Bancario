-- Roles de usuario
CREATE TABLE ROLES (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(50) UNIQUE NOT NULL
);

-- Usuarios
CREATE TABLE USERS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USERNAME VARCHAR2(50) UNIQUE NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(200) NOT NULL
);

-- Relación muchos a muchos USER - ROLE
CREATE TABLE USER_ROLES (
    USER_ID NUMBER NOT NULL,
    ROLE_ID NUMBER NOT NULL,
    CONSTRAINT PK_USER_ROLES PRIMARY KEY (USER_ID, ROLE_ID),
    CONSTRAINT FK_USERROLES_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    CONSTRAINT FK_USERROLES_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID)
);

-- Cuentas bancarias
CREATE TABLE BANK_ACCOUNTS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ACCOUNT_NUMBER VARCHAR2(20) UNIQUE NOT NULL,
    USER_ID NUMBER NOT NULL,
    BALANCE NUMBER(15,2) DEFAULT 0 NOT NULL,
    CURRENCY VARCHAR2(10) DEFAULT 'USD',
    STATUS VARCHAR2(20) DEFAULT 'ACTIVE',
    CONSTRAINT FK_ACCOUNT_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

-- Transacciones
CREATE TABLE TRANSACTIONS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FROM_ACCOUNT NUMBER NULL,
    TO_ACCOUNT NUMBER NULL,
    AMOUNT NUMBER(15,2) NOT NULL,
    TYPE VARCHAR2(20) NOT NULL, -- DEBIT, CREDIT, TRANSFER
    DESCRIPTION VARCHAR2(255),
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT FK_TRANS_FROM FOREIGN KEY (FROM_ACCOUNT) REFERENCES BANK_ACCOUNTS(ID),
    CONSTRAINT FK_TRANS_TO FOREIGN KEY (TO_ACCOUNT) REFERENCES BANK_ACCOUNTS(ID)
);

-- Índices adicionales
CREATE INDEX IDX_USER_USERNAME ON USERS(USERNAME);
CREATE INDEX IDX_ACCOUNT_NUMBER ON BANK_ACCOUNTS(ACCOUNT_NUMBER);
CREATE INDEX IDX_TRANS_DATE ON TRANSACTIONS(CREATED_AT);
